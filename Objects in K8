# ðŸŒŸ Important Kubernetes Objects

### ðŸ”¹ 1. **Pod**

* The **smallest deployable unit** in Kubernetes.
* Represents **one or more containers** that share:

  * Storage
  * Network namespace (same IP, ports)
  * Lifecycle
* Example: Running an `nginx` container inside a pod.

---

### ðŸ”¹ 2. **ReplicaSet**

* Ensures a specified **number of pod replicas** are running at all times.
* If a pod crashes, ReplicaSet creates a new one.
* Usually managed automatically by **Deployments**.

---

### ðŸ”¹ 3. **Deployment**

* The most common object for **stateless applications**.
* Manages ReplicaSets and allows:

  * **Rolling updates** (zero downtime updates)
  * **Rollbacks** to previous versions
* Example: Deploying a web app with 3 replicas.

---

### ðŸ”¹ 4. **Service**

* Provides a **stable networking endpoint** for pods.
* Types:

  * `ClusterIP` â†’ internal access only
  * `NodePort` â†’ exposes on a static port of each node
  * `LoadBalancer` â†’ integrates with cloud providerâ€™s LB
* Example: Expose your `nginx` deployment to users.

---

### ðŸ”¹ 5. **Namespace**

* A way to **logically separate resources** inside a cluster.
* Used for multi-tenant environments or separating dev/test/prod.

---

### ðŸ”¹ 6. **ConfigMap**

* Stores **configuration data** (key-value pairs).
* Injected into pods as env variables or config files.
* Example: DB connection string, feature flags.

---

### ðŸ”¹ 7. **Secret**

* Stores **sensitive data** (passwords, tokens, certificates).
* Base64-encoded, but should still be protected with RBAC.
* Example: Database password.

---

### ðŸ”¹ 8. **DaemonSet**

* Ensures **one pod runs on each (or selected) node**.
* Used for system-level pods (logging, monitoring, networking).
* Example: `flannel` CNI, `node-exporter`.

---

### ðŸ”¹ 9. **StatefulSet**

* Like Deployment but for **stateful applications**.
* Provides:

  * Stable, unique network IDs
  * Stable, persistent storage
* Example: Databases like MySQL, MongoDB, Cassandra.

---

### ðŸ”¹ 10. **Job & CronJob**

* **Job**: Runs a pod until it completes successfully.
* **CronJob**: Runs jobs **on a schedule** (like Linux cron).
* Example: Nightly database backup.

---

### ðŸ”¹ 11. **Ingress**

* Manages **external HTTP/HTTPS access** to services.
* Provides advanced routing (host/path-based).
* Example: `myapp.com/login` â†’ service A, `myapp.com/api` â†’ service B.

---

## ðŸŽ¯ Summary

* **Workload objects**: Pod, ReplicaSet, Deployment, StatefulSet, DaemonSet, Job, CronJob
* **Networking objects**: Service, Ingress, NetworkPolicy
* **Configuration objects**: ConfigMap, Secret, Volume
* **Cluster management objects**: Namespace, Node, Role, RoleBinding, ClusterRole, ClusterRoleBinding

---

